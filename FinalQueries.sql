-- 1. Find the total number of reviews for each hotel:
SELECT h.title, COUNT(r.reviewid) AS total_reviews
FROM hotel h
LEFT JOIN room ro ON h.pid = ro.pid
LEFT JOIN booking b ON ro.rid = b.rid
LEFT JOIN review r ON b.bid = r.bid
GROUP BY h.title;

-- 2. Retrieve all hotels and the number of rooms they have:
SELECT h.title, COUNT(r.rid) AS total_rooms
FROM hotel h
LEFT JOIN room r ON h.pid = r.pid
GROUP BY h.title;

-- 3. Show the top-rated rooms along with their hotel information:
SELECT h.title, r.name AS room_name, r.avgrating AS room_rating
FROM hotel h
JOIN room r ON h.pid = r.pid
ORDER BY r.avgrating DESC
LIMIT 10;

-- 4. Calculate the average rating of each hotel:
SELECT h.title, AVG(r.rating) AS avg_rating
FROM hotel h
LEFT JOIN room ro ON h.pid = ro.pid
LEFT JOIN booking b ON ro.rid = b.rid
LEFT JOIN review r ON b.bid = r.bid
GROUP BY h.title;


-- 5. Retrieve the names of users who made bookings in the last month:
SELECT u.name
FROM "user" u
JOIN booking b ON u.uid = b.uid
WHERE b.checkin >= CURRENT_DATE - INTERVAL '1 month';


-- 6. Find the total revenue generated by each hotel:
SELECT h.title, SUM(b.price) AS total_revenue
FROM hotel h
JOIN booking b ON h.pid = b.pid
GROUP BY h.title;


-- 7. Retrieve the details of the most expensive room booked:
SELECT b.*, r.*
FROM booking b
JOIN room r ON b.rid = r.rid
ORDER BY b.price DESC
LIMIT 1;


-- 8. Show the hotels where the average rating is above 4:
SELECT h.title, AVG(r.rating) AS avg_rating
FROM hotel h
LEFT JOIN room ro ON h.pid = ro.pid
LEFT JOIN booking b ON ro.rid = b.rid
LEFT JOIN review r ON b.bid = r.bid
GROUP BY h.title
HAVING AVG(r.rating) > 4;


-- 9. List users and the number of bookings they've made:
SELECT u.name, COUNT(b.bid) AS num_bookings
FROM "user" u
LEFT JOIN booking b ON u.uid = b.uid
GROUP BY u.name;


-- 10. Show the hotels and their average room prices:
SELECT h.title, AVG(r.price) AS avg_room_price
FROM hotel h
JOIN room r ON h.pid = r.pid
GROUP BY h.title;


-- 11. Retrieve the latest review for each hotel:
SELECT h.title, r.rating, r.comment
FROM hotel h
JOIN room ro ON h.pid = ro.pid
JOIN booking b ON ro.rid = b.rid
JOIN (
    SELECT bid, rating, comment
    FROM review
    ORDER BY reviewid DESC
    LIMIT 1
) r ON b.bid = r.bid;



-- 12. Booking Summary View:
-- This view provides a summary of booking information, including user details, hotel details, room details, check-in and check-out dates, and the total price.
CREATE VIEW booking_summary_view AS
SELECT b.bid, u.name AS user_name, h.title AS hotel_title, r.name AS room_name,
       b.checkin, b.checkout, b.price
FROM booking b
JOIN "user" u ON b.uid = u.uid
JOIN hotel h ON b.pid = h.pid
JOIN room r ON b.rid = r.rid;


-- 13. User Review Summary View:
-- This view provides a summary of users along with the count of their bookings and the average rating of their reviews.
CREATE VIEW user_review_summary_view AS
SELECT u.uid, u.name, u.email, u.role,
       COUNT(b.bid) AS total_bookings,
       COALESCE(AVG(r.rating), 0) AS avg_review_rating
FROM "user" u
LEFT JOIN booking b ON u.uid = b.uid
LEFT JOIN review r ON b.bid = r.bid
GROUP BY u.uid;



-- 14. Retrieve Hotels with Availability:
-- This query retrieves hotels where at least one room is currently available.
SELECT *
FROM hotel h
WHERE EXISTS (
    SELECT 1
    FROM room r
    WHERE r.pid = h.pid AND r.availability = TRUE
);
